<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="4" skipped="2" tests="16" time="0.451" timestamp="2022-03-29T17:00:12.933952" hostname="LAPTOP-F6AKMO1O"><testcase classname="test_Calculator01" name="test_add[3-2-5]" time="0.006" /><testcase classname="test_Calculator01" name="test_add[10-12-15]" time="0.006"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="test_Calculator01" name="test_add[2-5-8]" time="0.005"><skipped type="pytest.xfail" message="" /></testcase><testcase classname="test_Calculator01" name="test_add[7-8-15]" time="0.001" /><testcase classname="test_Calculator01" name="test_sub[7-2-5]" time="0.003" /><testcase classname="test_Calculator01" name="test_sub[27-12-15]" time="0.004" /><testcase classname="test_Calculator01" name="test_sub[13-5-8]" time="0.004" /><testcase classname="test_Calculator01" name="test_sub[7-8-15]" time="0.008"><failure message="assert 15 == -1">a = 7, b = 8, c = 15

    @pytest.mark.parametrize("a,b,c",[(7,2,5),(27,12,15),(13,5,8),(7,8,15)])
    def test_sub(a,b,c):
        result=Calculator01.sub(a,b)
&gt;       assert c==result
E       assert 15 == -1

test_Calculator01.py:14: AssertionError</failure></testcase><testcase classname="test_Calculator01" name="test_mul[1-2-2]" time="0.002" /><testcase classname="test_Calculator01" name="test_mul[3-4-12]" time="0.004" /><testcase classname="test_Calculator01" name="test_mul[11-12-23]" time="0.003"><failure message="assert 23 == 132">a = 11, b = 12, c = 23

    @pytest.mark.parametrize("a,b,c",[(1,2,2),(3,4,12),(11,12,23),(2,7,9)])
    def test_mul(a,b,c):
        result=Calculator01.mul(a,b)
&gt;       assert c==result
E       assert 23 == 132

test_Calculator01.py:19: AssertionError</failure></testcase><testcase classname="test_Calculator01" name="test_mul[2-7-9]" time="0.008"><failure message="assert 9 == 14">a = 2, b = 7, c = 9

    @pytest.mark.parametrize("a,b,c",[(1,2,2),(3,4,12),(11,12,23),(2,7,9)])
    def test_mul(a,b,c):
        result=Calculator01.mul(a,b)
&gt;       assert c==result
E       assert 9 == 14

test_Calculator01.py:19: AssertionError</failure></testcase><testcase classname="test_Calculator01" name="test_div[10-5-2]" time="0.003" /><testcase classname="test_Calculator01" name="test_div[5-2-2.5]" time="0.006" /><testcase classname="test_Calculator01" name="test_div[70-2-35]" time="0.004" /><testcase classname="test_Calculator01" name="test_div[10-3-5]" time="0.003"><failure message="assert 5 == 3.3333333333333335">a = 10, b = 3, c = 5

    @pytest.mark.parametrize("a,b,c",[(10,5,2),(5,2,2.5),(70,2,35),(10,3,5)])
    def test_div(a,b,c):
        result=Calculator01.div(a,b)
&gt;       assert c==result
E       assert 5 == 3.3333333333333335

test_Calculator01.py:24: AssertionError</failure></testcase></testsuite></testsuites>